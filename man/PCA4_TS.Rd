% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCA4_TS.R
\name{PCA4_TS}
\alias{PCA4_TS}
\title{Principal component analysis for time serise}
\usage{
PCA4_TS(
  Y,
  lag.k = 5,
  thresh = FALSE,
  tuning.vec = NULL,
  K = 5,
  prewhiten = TRUE,
  permutation = c("max", "fdr"),
  m = NULL,
  beta,
  just4pre = FALSE
)
}
\arguments{
\item{Y}{\eqn{{\bf Y} = \{{\bf y}_1, \dots , {\bf y}_n \}'}, a data matrix with \eqn{n} rows and \eqn{p} columns, where \eqn{n} is the sample size and 
\eqn{p} is the dimension of \eqn{{\bf y}_t}.}

\item{lag.k}{Time lag \eqn{k_0} used to calculate the nonnegative definte matrix \eqn{\widehat{{\bf W}}_y}:
\deqn{\widehat{\mathbf{W}}_y\ =\ \sum_{k=0}^{k_0}\widehat{\mathbf{\Sigma}}_y(k)\widehat{\mathbf{\Sigma}}_y(k)'=\mathbf{I}_p+\sum_{k=1}^{k_0}\widehat{\mathbf{\Sigma}}_y(k)\widehat{\mathbf{\Sigma}}_y(k)', }
    where \eqn{\widehat{\bf \Sigma}_y(k)} is the sample autocovariance of \eqn{ {\bf y}_t} at lag \eqn{k}. See (2.5) in Chang, Guo and Yao (2018).}

\item{thresh}{Logical. If \code{FALSE} (the default), no thresholding will be applied to estimate \eqn{\widehat{{\bf W}}_y}. If \code{TRUE}, a
thresholding method will be applied first to estimate \eqn{\widehat{{\bf W}}_y}, see (3.3) and (3.5) in Chang, Guo and Yao (2018).}

\item{tuning.vec}{The value of the tuning parameter \eqn{\lambda} in the thresholding level
\eqn{ u = \lambda {(n^{-1}\log p)}^{1/2}},
  where default value is 2. If \code{tuning.vec} is a vector, then a cross validation method proposed in Cai and Liu (2011) will be used
  to choose the best tuning parameter \eqn{\lambda}.}

\item{K}{The number of folders used in the cross validation, the default is 5. It is required when \code{thresh = TRUE}.}

\item{prewhiten}{Logical. If \code{TRUE} (the default), then prewhiten each component series of \eqn{{\bf y}_t} by fitting a univariate AR model with
the order between 0 and 5 determined by AIC. If \code{FALSE}, then prewhiten procedure will not perform to transformed series \eqn{{\bf z}_t}.}

\item{permutation}{The method of permutation procedure, where option is \code{'max'} (Maximum cross correlation method) or \code{'fdr'} (False discovery rate procedure based on multiple tests), 
default is \code{permutation = 'max'}. See section 2.2.2 and section 2.2.3 in Chang ,Guo and Yao (2018) for more information.}

\item{m}{A positive constant used to calculate the maximum cross correlation over the lags between \eqn{-m} and \eqn{m}. If \eqn{m} is not
specified, then default option is \code{m = }\eqn{10\log_{10} {(n/p)}}.}

\item{beta}{The error rate used in permutation procedure, It is required when \code{permutation = 'fdr'}.}

\item{just4pre}{Logical. If \code{TRUE}, then only segment procedure will be implemented to calculate the transformed series \eqn{{\bf z}_t} where \eqn{{\bf z}_t = (z_{1,t},\dots,z_{p,t})'}, if \code{FALSE} (the default), then the normal procedure 
(including permutation procedure) will be implemented to data \eqn{{\bf y}_t}. See \code{\link{WN_test}} for more applications.}
}
\value{
The output of segment procedure is a list containing the following components:
\item{B}{The \eqn{p\times p} transformation matrix such that \eqn{\hat{\bf z}_t = \widehat{\bf B}{\bf y}_t}.}
\item{Z}{The transformed series with \eqn{n} rows and \eqn{p} columns.}

The output of permutation procedure is a list containing the following components:
\item{NoGroups}{The number of the groups with at least two components series.}
\item{No_of_Members}{The number of members in each of the groups with at least two members.}
\item{Groups}{The indices of components in each of groups with at least two members.}
\item{maxcorr}{The maximum correlation (over lags) of \eqn{p(p-1)/2} pairs in descending order if \code{permutation = 'max'}.}
\item{corrRatio}{The ratios of successive values from \code{maxcorr} if \code{permutation= 'max'}.}
\item{Pvalues}{The p-value for multiple test: \deqn{H_0:\rho_{i,j}(h)=0\ \mathrm{\ for\ any}\ h\ =\ 0,\ \pm 1,\ \pm2,\dots,\ \pm m} 
              for each of \eqn{p(p-1)/2} pairs in ascending order if \code{permutation = 'fdr'} where \eqn{\rho_{i,j}(h)} denotes the cross correlation between the two 
              components series \eqn{\hat{z}_{i,t}} and \eqn{\hat{z}_{j,t}}, see more information in section 2.2.3 in Chang Guo and Yao (2018).}
\item{NoConnectedPairs}{The number of connected pairs.}
\item{Xpre}{The prewhitened data with \eqn{n-R} rows and \eqn{p} columns}
}
\description{
\code{PCA4_TS()} seeks for a contemporaneous linear transformation for
a multivariate time series such that the transformed series is segmented
into several lower-dimensional subseries: \deqn{{\bf y}_t={\bf Ax}_t,} where \eqn{{\bf x}_t} is an unobservable \eqn{p \times 1} weakly 
stationary time series consisting of \eqn{q\ (\geq 1)} both contemporaneously and serially uncorrelated subseries. See Chang, Guo and Yao (2018).
}
\details{
Before segment procedure, the time series \eqn{{\bf y}_t} need to be normalized, then \eqn{{\bf y}_t} will be replaced by 
 \eqn{{{\bf V}}^{-1/2}{\bf y}_t} where \eqn{{\bf V}} denotes the variance of \eqn{{\bf y}_t}. When \eqn{p>n}, it is necessary to use the package \pkg{clime} to estimate the precision matrix \eqn{\widehat{{\bf V}}^{-1}} 
 where \eqn{\widehat{{\bf V}}} is a consistent estimator for \eqn{\mathrm{Var}({\bf y}_t)}. In segment procedure, when \eqn{p=o(n^{1/2})}, 
 it is recommended to use the thresholding method to calculate \eqn{\widehat{{\bf W}}_y}, see more information in Chang, Guo and Yao (2018).
}
\note{
The first step is transform the time series. It calculate linear transformation of the \eqn{p}-variate time series
      \eqn{{\bf y}_t} such that the transformed series \eqn{{\bf z}_t={\bf By}_t} is segmented into several lower-dimensional subseries, and the columns of \eqn{{\bf A}} that need to be
       estimated are a permutation of the columns of \eqn{{\bf B}}. The second step is grouping 
      the transformed time series \eqn{{\bf z}_t} into \eqn{q} groups, where \eqn{q} and the cardinal numbers of those groups are also unknown.
}
\examples{
## Example 1 (Example 5 of Chang Guo and Yao (2018)). 
## p=6, x_t consists of 3 independent subseries with 3, 2 and 1 components.    

p <- 6;n <- 1500
# Generate x_t
X <- mat.or.vec(p,n)
x <- arima.sim(model=list(ar=c(0.5, 0.3), ma=c(-0.9, 0.3, 1.2,1.3)),n=n+2,sd=1)
for(i in 1:3) X[i,] <- x[i:(n+i-1)]  
x <- arima.sim(model=list(ar=c(0.8,-0.5),ma=c(1,0.8,1.8) ),n=n+1,sd=1)
for(i in 4:5) X[i,] <- x[(i-3):(n+i-4)]   
x <- arima.sim(model=list(ar=c(-0.7, -0.5), ma=c(-1, -0.8)),n=n,sd=1)
X[6,] <- x
# Generate y_t 
A <- matrix(runif(p*p, -3, 3), ncol=p)
Y <- A\%*\%X  
Y <- t(Y)
res <- PCA4_TS(Y, lag.k=5,permutation = "max")
# The transformed series z_t 
Z <- res$X 
# Plot the cross correlogram of z_t and y_t
Y <- data.frame(Y);Z=data.frame(Z)
names(Y) <- c("Y1","Y2","Y3","Y4","Y5","Y6")
names(Z) <- c("Z1","Z2","Z3","Z4","Z5","Z6")
# The cross correlogram of y_t shows no block pattern 
acfY <- acf(Y) 
# The cross correlogram of z_t shows 3-2-1 block pattern  
acfZ <- acf(Z)
      
## Example 2 (Example 6 of Chang Guo and Yao (2018)).
## p=20, x_t consists of 5 independent subseries with 6, 5, 4, 3 and 2 components.    
p <- 20;n <- 3000
# Generate x_t
X <- mat.or.vec(p,n)
x <- arima.sim(model=list(ar=c(0.5, 0.3), ma=c(-0.9, 0.3, 1.2,1.3)),n.start=500,n=n+5,sd=1)
for(i in 1:6) X[i,] <- x[i:(n+i-1)]
x <- arima.sim(model=list(ar=c(-0.4,0.5),ma=c(1,0.8,1.5,1.8)),n.start=500,n=n+4,sd=1)
for(i in 7:11) X[i,] <- x[(i-6):(n+i-7)]
x <- arima.sim(model=list(ar=c(0.85,-0.3),ma=c(1,0.5,1.2)), n.start=500,n=n+3,sd=1)
for(i in 12:15) X[i,] <- x[(i-11):(n+i-12)]
x <- arima.sim(model=list(ar=c(0.8,-0.5),ma=c(1,0.8,1.8)),n.start=500,n=n+2,sd=1)
for(i in 16:18) X[i,] <- x[(i-15):(n+i-16)]
x <- arima.sim(model=list(ar=c(-0.7, -0.5), ma=c(-1, -0.8)),n.start=500,n=n+1,sd=1)
for(i in 19:20) X[i,] <- x[(i-18):(n+i-19)]
# Generate y_t 
A <- matrix(runif(p*p, -3, 3), ncol=p)
Y <- A\%*\%X  
Y <- t(Y)
res <- PCA4_TS(Y, lag.k=5,permutation = "max")
# The transformed series z_t 
Z <- res$X 
# Plot the cross correlogram of x_t and y_t
Y <- data.frame(Y);Z <- data.frame(Z)
namesY=NULL;namesZ=NULL
for(i in 1:p)
{
   namesY <- c(namesY,paste0("Y",i))
   namesZ <- c(namesZ,paste0("Z",i))
}  
names(Y) <- namesY;names(Z) <- namesZ
# The cross correlogram of y_t shows no block pattern 
acfY <- acf(Y, plot=FALSE)
plot(acfY, max.mfrow=6, xlab='', ylab='',  mar=c(1.8,1.3,1.6,0.5), 
     oma=c(1,1.2,1.2,1), mgp=c(0.8,0.4,0),cex.main=1)    
# The cross correlogram of z_t shows 6-5-4-3-2 block pattern  
acfZ <- acf(Z, plot=FALSE)
plot(acfZ, max.mfrow=6, xlab='', ylab='',  mar=c(1.8,1.3,1.6,0.5),
     oma=c(1,1.2,1.2,1), mgp=c(0.8,0.4,0),cex.main=1)
# Identify the permutation mechanism
permutation <- res
permutation$Groups  
}
\references{
Chang, J., Guo, B. & Yao, Q. (2018). \emph{Principal component analysis for second-order stationary vector time series}. The Annals of Statistics, Vol. 46, pp. 2094--2124.

            Cai, T. and Liu, W. (2011). \emph{Adaptive thresholding for sparse covariance matrix estimation}.  Journal of the American Statistical Association Vol. 106, pp. 672--684.

            Cai, T.T., Liu, W., and Luo, X. (2011). \emph{A constrained l1 minimization approach for sparse precision matrix estimation}. Journal of the American Statistical Association Vol. 106(494), pp. 594--607.
}
